import{S as be,i as ne,s as me,y as d,a as _,z as g,c as B,A as h,b as i,g as ee,d as te,B as se,h as t,k as r,q as m,l as u,m as w,r as $,D as E,H as ue}from"../chunks/index.8cffed02.js";import{P as $e}from"../chunks/PageTitle.df959b80.js";import{S as re}from"../chunks/Section.be805b22.js";function ae(J){let f,a;return{c(){f=r("p"),a=m("The console app is built as a tool to provide for quick actions given a command.")},l(p){f=u(p,"P",{});var b=w(f);a=$(b,"The console app is built as a tool to provide for quick actions given a command."),b.forEach(t)},m(p,b){i(p,f,b),E(f,a)},p:ue,d(p){p&&t(f)}}}function _e(J){let f,a,p,b,n,v,l,o,c,R,K,P,S,W,y,V,k,A,T,z,D,q,X,H,j,F,G,I,x,Y,L,M,N,O,Q,C,Z,U;return{c(){f=r("b"),a=m("resource"),p=m(` is used to insert resources defined in the app and supposed to be run when creating a fresh database.
    `),b=r("br"),n=_(),v=r("br"),l=_(),o=r("b"),c=m("scope"),R=m(` is used to insert scopes defined in the app and supposed to be run when creating a fresh database.
    `),K=r("br"),P=_(),S=r("br"),W=_(),y=r("b"),V=m("rotate"),k=m(` is used to rotate JWK used for signing, it does so by inserting one new JWK in the database.
    `),A=r("br"),T=_(),z=r("br"),D=_(),q=r("b"),X=m("client"),H=m(` is used to create clients.
    `),j=r("br"),F=_(),G=r("br"),I=_(),x=r("b"),Y=m("cleanclient"),L=m(` used used for deleting all clients.
    `),M=r("br"),N=_(),O=r("br"),Q=_(),C=r("b"),Z=m("migration"),U=m(" is used to apply migrations.")},l(e){f=u(e,"B",{});var s=w(f);a=$(s,"resource"),s.forEach(t),p=$(e,` is used to insert resources defined in the app and supposed to be run when creating a fresh database.
    `),b=u(e,"BR",{}),n=B(e),v=u(e,"BR",{}),l=B(e),o=u(e,"B",{});var ie=w(o);c=$(ie,"scope"),ie.forEach(t),R=$(e,` is used to insert scopes defined in the app and supposed to be run when creating a fresh database.
    `),K=u(e,"BR",{}),P=B(e),S=u(e,"BR",{}),W=B(e),y=u(e,"B",{});var le=w(y);V=$(le,"rotate"),le.forEach(t),k=$(e,` is used to rotate JWK used for signing, it does so by inserting one new JWK in the database.
    `),A=u(e,"BR",{}),T=B(e),z=u(e,"BR",{}),D=B(e),q=u(e,"B",{});var fe=w(q);X=$(fe,"client"),fe.forEach(t),H=$(e,` is used to create clients.
    `),j=u(e,"BR",{}),F=B(e),G=u(e,"BR",{}),I=B(e),x=u(e,"B",{});var pe=w(x);Y=$(pe,"cleanclient"),pe.forEach(t),L=$(e,` used used for deleting all clients.
    `),M=u(e,"BR",{}),N=B(e),O=u(e,"BR",{}),Q=B(e),C=u(e,"B",{});var oe=w(C);Z=$(oe,"migration"),oe.forEach(t),U=$(e," is used to apply migrations.")},m(e,s){i(e,f,s),E(f,a),i(e,p,s),i(e,b,s),i(e,n,s),i(e,v,s),i(e,l,s),i(e,o,s),E(o,c),i(e,R,s),i(e,K,s),i(e,P,s),i(e,S,s),i(e,W,s),i(e,y,s),E(y,V),i(e,k,s),i(e,A,s),i(e,T,s),i(e,z,s),i(e,D,s),i(e,q,s),E(q,X),i(e,H,s),i(e,j,s),i(e,F,s),i(e,G,s),i(e,I,s),i(e,x,s),E(x,Y),i(e,L,s),i(e,M,s),i(e,N,s),i(e,O,s),i(e,Q,s),i(e,C,s),E(C,Z),i(e,U,s)},p:ue,d(e){e&&t(f),e&&t(p),e&&t(b),e&&t(n),e&&t(v),e&&t(l),e&&t(o),e&&t(R),e&&t(K),e&&t(P),e&&t(S),e&&t(W),e&&t(y),e&&t(k),e&&t(A),e&&t(T),e&&t(z),e&&t(D),e&&t(q),e&&t(H),e&&t(j),e&&t(F),e&&t(G),e&&t(I),e&&t(x),e&&t(L),e&&t(M),e&&t(N),e&&t(O),e&&t(Q),e&&t(C),e&&t(U)}}}function Be(J){let f,a,p,b,n,v;return f=new $e({props:{title:"ConfigurationApp"}}),p=new re({props:{title:"ConfigurationApp",$$slots:{default:[ae]},$$scope:{ctx:J}}}),n=new re({props:{title:"Commands",$$slots:{default:[_e]},$$scope:{ctx:J}}}),{c(){d(f.$$.fragment),a=_(),d(p.$$.fragment),b=_(),d(n.$$.fragment)},l(l){g(f.$$.fragment,l),a=B(l),g(p.$$.fragment,l),b=B(l),g(n.$$.fragment,l)},m(l,o){h(f,l,o),i(l,a,o),h(p,l,o),i(l,b,o),h(n,l,o),v=!0},p(l,[o]){const c={};o&1&&(c.$$scope={dirty:o,ctx:l}),p.$set(c);const R={};o&1&&(R.$$scope={dirty:o,ctx:l}),n.$set(R)},i(l){v||(ee(f.$$.fragment,l),ee(p.$$.fragment,l),ee(n.$$.fragment,l),v=!0)},o(l){te(f.$$.fragment,l),te(p.$$.fragment,l),te(n.$$.fragment,l),v=!1},d(l){se(f,l),l&&t(a),se(p,l),l&&t(b),se(n,l)}}}class Ee extends be{constructor(f){super(),ne(this,f,null,Be,me,{})}}export{Ee as component};
