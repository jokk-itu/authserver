import{S as L,i as b,s as x,c as v,a as y,b as I,d as z,m as O,k as h,o as k,p as D,q as w,j as l,e as u,t as A,f as m,g as d,h as C,l as $,n as q,r as E}from"../../../../chunks/index-8ff2e5dd.js";import{D as T}from"../../../../chunks/Diagram-61881b48.js";import{P as U}from"../../../../chunks/PageTitle-edc21ece.js";import{S as R}from"../../../../chunks/Section-3eaacaa0.js";function F(f){let n,a;return{c(){n=u("p"),a=A(`The standard grant type and preferred in all use cases when using OIDC.
    In short the client redirects the user to the authorize endpoint,
    after login an authorization code is sent back to the client,
    at last the client requests the token endpoint for tokens.`)},l(t){n=m(t,"P",{});var s=d(n);a=C(s,`The standard grant type and preferred in all use cases when using OIDC.
    In short the client redirects the user to the authorize endpoint,
    after login an authorization code is sent back to the client,
    at last the client requests the token endpoint for tokens.`),s.forEach(l)},m(t,s){h(t,n,s),$(n,a)},p:q,d(t){t&&l(n)}}}function j(f){let n,a,t,s,o,c,i,p;return{c(){n=u("ul"),a=u("li"),t=u("a"),s=A("OpenId Connect v1.0"),o=y(),c=u("li"),i=u("a"),p=A("OAuth 2.1"),this.h()},l(e){n=m(e,"UL",{class:!0});var r=d(n);a=m(r,"LI",{});var _=d(a);t=m(_,"A",{href:!0});var g=d(t);s=C(g,"OpenId Connect v1.0"),g.forEach(l),_.forEach(l),o=z(r),c=m(r,"LI",{});var P=d(c);i=m(P,"A",{href:!0});var S=d(i);p=C(S,"OAuth 2.1"),S.forEach(l),P.forEach(l),r.forEach(l),this.h()},h(){E(t,"href","https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth"),E(i,"href","https://datatracker.ietf.org/doc/html/draft-ietf-oauth-v2-1-05"),E(n,"class","list-disc")},m(e,r){h(e,n,r),$(n,a),$(a,t),$(t,s),$(n,o),$(n,c),$(c,i),$(i,p)},p:q,d(e){e&&l(n)}}}function B(f){let n=`
sequenceDiagram
actor EndUser
participant RelyingParty as RP
participant OpenIDProvider as OP
RelyingParty->>OpenIDProvider: Authorize endpoint
EndUser->>OpenIDProvider: Login
OpenIDProvider->>RelyingParty: Formpost authorization code
RelyingParty->>OpenIDProvider: Post token endpoint
OpenIDProvider->>RelyingParty: Ok 200 with tokens
`,a;return{c(){a=A(n)},l(t){a=C(t,n)},m(t,s){h(t,a,s)},p:q,d(t){t&&l(a)}}}function G(f){let n,a;return n=new T({props:{$$slots:{default:[B]},$$scope:{ctx:f}}}),{c(){v(n.$$.fragment)},l(t){I(n.$$.fragment,t)},m(t,s){O(n,t,s),a=!0},p(t,s){const o={};s&1&&(o.$$scope={dirty:s,ctx:t}),n.$set(o)},i(t){a||(k(n.$$.fragment,t),a=!0)},o(t){D(n.$$.fragment,t),a=!1},d(t){w(n,t)}}}function H(f){let n,a,t,s,o,c,i,p;return n=new U({props:{title:"AuthorizationCode"}}),t=new R({props:{title:"Introduction",$$slots:{default:[F]},$$scope:{ctx:f}}}),o=new R({props:{title:"Specification",$$slots:{default:[j]},$$scope:{ctx:f}}}),i=new R({props:{title:"Authorization Code",$$slots:{default:[G]},$$scope:{ctx:f}}}),{c(){v(n.$$.fragment),a=y(),v(t.$$.fragment),s=y(),v(o.$$.fragment),c=y(),v(i.$$.fragment)},l(e){I(n.$$.fragment,e),a=z(e),I(t.$$.fragment,e),s=z(e),I(o.$$.fragment,e),c=z(e),I(i.$$.fragment,e)},m(e,r){O(n,e,r),h(e,a,r),O(t,e,r),h(e,s,r),O(o,e,r),h(e,c,r),O(i,e,r),p=!0},p(e,[r]){const _={};r&1&&(_.$$scope={dirty:r,ctx:e}),t.$set(_);const g={};r&1&&(g.$$scope={dirty:r,ctx:e}),o.$set(g);const P={};r&1&&(P.$$scope={dirty:r,ctx:e}),i.$set(P)},i(e){p||(k(n.$$.fragment,e),k(t.$$.fragment,e),k(o.$$.fragment,e),k(i.$$.fragment,e),p=!0)},o(e){D(n.$$.fragment,e),D(t.$$.fragment,e),D(o.$$.fragment,e),D(i.$$.fragment,e),p=!1},d(e){w(n,e),e&&l(a),w(t,e),e&&l(s),w(o,e),e&&l(c),w(i,e)}}}class Q extends L{constructor(n){super(),b(this,n,null,H,x,{})}}export{Q as default};
